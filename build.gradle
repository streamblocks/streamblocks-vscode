buildscript {
    repositories {
    	mavenCentral()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
    }
    dependencies {
		classpath 'org.xtext:xtext-gradle-plugin:2.0.8'
		classpath "com.github.node-gradle:gradle-node-plugin:3.1.0"
    }
}

// Configuration for Xtext projects
configure([project(':xtext-language-server:streamblocks.cal'), project(':xtext-language-server:streamblocks.cal.ide')]) {
	ext.xtextVersion = '2.25.0'
	repositories {
		mavenCentral()
	}
	
	apply plugin: 'java'
	dependencies {
		compile platform("org.eclipse.xtext:xtext-dev-bom:${xtextVersion}")
	}

	apply plugin: 'org.xtext.xtend'
	apply from: "${rootDir}/gradle/source-layout.gradle"
	apply plugin: 'eclipse'
	
	group = 'streamblocks.cal'
	version = '1.0.0-SNAPSHOT'
	
	sourceCompatibility = '11'
	targetCompatibility = '11'
	
	configurations.all {
		exclude group: 'asm'
	}
}

// Configuration for VS Code project
configure(project(':extensions:vscode')) {
	apply plugin: 'com.github.node-gradle.node'

	node {
		version = '10.16.0'
		npmVersion = '6.10.2'
		download = true
	}

	def inputFiles = fileTree(
		dir: projectDir, 
		excludes: [ 'out/**', '.gitignore', '.gradle/**', 'build/**', '*.gradle' ]
	)

	npmInstall {
		inputs.files(inputFiles)
		outputs.dir('out')
	}

	task npmInstallVsce(type: NpmTask, dependsOn: npmSetup) {
		ext.destPath = "$projectDir/node_modules/vsce" 
		outputs.dir(destPath)
		group 'Node'
		description 'Installs the NodeJS package "Visual Studio Code Extension Manager"'
		args = [ 'install', 'vsce' ]
	}

	plugins.withType(com.github.gradle.node.NodePlugin) {
		node {
			workDir = file("$buildDir/nodejs")
			nodeModulesDir = projectDir
		}
	}

	task packageExtension(dependsOn: [npmInstall, npmInstallVsce], type: NodeTask) {
		ext.destDir = new File(buildDir, 'vscode')
		ext.archiveName = "streamblocks-extension.vsix"
		ext.destPath = "$destDir/$archiveName"
		inputs.with {
			files inputFiles
			dir npmInstallVsce.destPath
		}
		outputs.dir destDir
		doFirst {
			destDir.mkdirs()
		}
		script = file("$npmInstallVsce.destPath/out/vsce")
		args = [ 'package', '--out', destPath ]
		execOverrides {
			workingDir = projectDir
		}
	}

	task installExtension(type: Exec, dependsOn: packageExtension) {
		if (System.properties['os.name'].toLowerCase().contains('windows')) {
			commandLine 'code.cmd'
		} else {
			commandLine 'code'
		}
		args '--install-extension', packageExtension.destPath
	}

	task launchCode(type:Exec, dependsOn: installExtension) {
		if (System.properties['os.name'].toLowerCase().contains('windows')) {
			commandLine 'code.cmd'
		} else {
			commandLine 'code'
		}
		args "$rootProject.projectDir/workspace/", '--new-window'
	}

	task clean {
		doLast {
			delete packageExtension.destDir
			//delete 'build'
			//delete 'node_modules'
			delete 'out'
		}
		
	}
}